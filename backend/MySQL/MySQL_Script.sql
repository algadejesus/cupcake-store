-- MySQL Script generated by MySQL Workbench
-- Date: Wed Apr 13 09:38:52 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- Desabilitando as verificações de chave única e chave estrangeira temporariamente
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;

-- Criando o schema "cupcakes_store" e usando-o
CREATE SCHEMA IF NOT EXISTS `cupcakes_store` DEFAULT CHARACTER SET utf8 ;
USE `cupcakes_store`;

-- Criando a tabela "Endereco"
CREATE TABLE IF NOT EXISTS `cupcakes_store`.`Endereco` (
  `idEndereco` INT NOT NULL AUTO_INCREMENT,
  `rua` VARCHAR(255) NOT NULL,
  `numero` INT NOT NULL,
  `complemento` VARCHAR(100),
  `cidade` VARCHAR(100) NOT NULL,
  `estado` VARCHAR(2) NOT NULL,
  `codigoPostal` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idEndereco`)
)
ENGINE = InnoDB;

-- Criando a tabela "Telefone"
CREATE TABLE IF NOT EXISTS `cupcakes_store`.`Telefone` (
  `idTelefone` INT NOT NULL AUTO_INCREMENT,
  `numero` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`idTelefone`)
)
ENGINE = InnoDB;

-- Criando a tabela "Usuario"
CREATE TABLE IF NOT EXISTS `cupcakes_store`.`Usuario` (
  `idUsuario` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) UNIQUE NOT NULL,
  `senha` VARCHAR(255) NOT NULL,
  `endereco_id` INT NOT NULL,
  `telefone_id` INT NOT NULL,
  `sexo` VARCHAR(10) NOT NULL,
  `cpf` VARCHAR(15) UNIQUE NOT NULL,
  `nomeUsuario` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idUsuario`),
  INDEX `fk_Usuario_Endereco1_idx` (`endereco_id` ASC),
  INDEX `fk_Usuario_Telefone1_idx` (`telefone_id` ASC),
  FOREIGN KEY (`endereco_id`)
    REFERENCES `cupcakes_store`.`Endereco` (`idEndereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  FOREIGN KEY (`telefone_id`)
    REFERENCES `cupcakes_store`.`Telefone` (`idTelefone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;

-- Criando a tabela "Cliente"
CREATE TABLE IF NOT EXISTS `cupcakes_store`.`Cliente` (
  `idCliente` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT UNIQUE NOT NULL,
  PRIMARY KEY (`idCliente`),
  INDEX `fk_Cliente_Usuario1_idx` (`usuario_id` ASC),
  FOREIGN KEY (`usuario_id`)
    REFERENCES `cupcakes_store`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;

-- Criando a tabela "Funcionario"
CREATE TABLE IF NOT EXISTS `cupcakes_store`.`Funcionario` (
  `idFuncionario` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT UNIQUE NOT NULL,
  `cargo` VARCHAR(50) NOT NULL,
  `salario` DECIMAL(10, 2) NOT NULL,
  PRIMARY KEY (`idFuncionario`),
  INDEX `fk_Funcionario_Usuario1_idx` (`usuario_id` ASC),
  FOREIGN KEY (`usuario_id`)
    REFERENCES `cupcakes_store`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;

-- Criando a tabela "Gerente"
CREATE TABLE IF NOT EXISTS `cupcakes_store`.`Gerente` (
  `idGerente` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT UNIQUE NOT NULL,
  `departamento` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`idGerente`),
  INDEX `fk_Gerente_Usuario1_idx` (`usuario_id` ASC),
  FOREIGN KEY (`usuario_id`)
    REFERENCES `cupcakes_store`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;

-- Criando a tabela "Produto"
CREATE TABLE IF NOT EXISTS `cupcakes_store`.`Produto` (
  `idProduto` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NOT NULL,
  `descricao` TEXT,
  `preco` DECIMAL(10, 2) NOT NULL,
  `tamanho` VARCHAR(50) NOT NULL,
  `recheio` VARCHAR(255) NOT NULL,
  `cobertura` VARCHAR(255) NOT NULL,
  `massa` VARCHAR(50) NOT NULL,
  `peso` DECIMAL(10, 2) NOT NULL,
  `foto` VARCHAR(255) NOT NULL,
  `isStatus` BOOLEAN,
  PRIMARY KEY (`idProduto`)
)
ENGINE = InnoDB;

-- Criando a tabela "Situacao"
CREATE TABLE IF NOT EXISTS `cupcakes_store`.`Situacao` (
  `idSituacao` INT NOT NULL AUTO_INCREMENT,
  `situacao` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`idSituacao`)
)
ENGINE = InnoDB;

-- Criando a tabela "Pedido"
CREATE TABLE IF NOT EXISTS `cupcakes_store`.`Pedido` (
  `idPedido` INT NOT NULL AUTO_INCREMENT,
  `usuario_id` INT NOT NULL,
  `dataPedido` DATE NOT NULL,
  `situacao_id` INT NOT NULL,
  PRIMARY KEY (`idPedido`),
  INDEX `fk_Pedido_Usuario1_idx` (`usuario_id` ASC),
  INDEX `fk_Pedido_Situacao1_idx` (`situacao_id` ASC),
  FOREIGN KEY (`usuario_id`)
    REFERENCES `cupcakes_store`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  FOREIGN KEY (`situacao_id`)
    REFERENCES `cupcakes_store`.`Situacao` (`idSituacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;

-- Criando a tabela "Itens_de_Produto" (para rastrear produtos em um pedido)
CREATE TABLE IF NOT EXISTS `cupcakes_store`.`Itens_de_Produto` (
  `idItensProduto` INT NOT NULL AUTO_INCREMENT,
  `pedido_id` INT NOT NULL,
  `produto_id` INT NOT NULL,
  `quantidade` INT NOT NULL,
  `precoTotal` DECIMAL(10, 2) NOT NULL,
  PRIMARY KEY (`idItensProduto`),
  INDEX `fk_Itens_de_Produto_Pedido1_idx` (`pedido_id` ASC),
  INDEX `fk_Itens_de_Produto_Produto1_idx` (`produto_id` ASC),
  FOREIGN KEY (`pedido_id`)
    REFERENCES `cupcakes_store`.`Pedido` (`idPedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  FOREIGN KEY (`produto_id`)
    REFERENCES `cupcakes_store`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
ENGINE = InnoDB;

-- Restaurando as verificações de chave única e chave estrangeira
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
